.syntax--comment {
  color: @syntax-color-comment;
  font-style: italic;

  &.syntax--documentation {
    // color: @teal-200;
    background: none;
  }

  // TODO this is a thing
  // FIXME NOTE XXX TODO HACK 
  // WHAT this is not
  .syntax--storage {
    color: @syntax-background-color;
    background: @syntax-color-comment;
    font-weight: 600;
    border-radius: 2px;
    margin:  0 -2px 0 -3px;
    padding: 0  2px 0  3px;

    &.syntax--todo  { background: @syntax-color-string; }
    &.syntax--fixme { background: @syntax-color-keyword; }
    &.syntax--note  { background: @syntax-color-constant; }
    // &.syntax--xxx   { background: @light-blue-A400; }
  }
}

.syntax--keyword {
  color: @syntax-color-keyword;

  &.syntax--control {
    // color: @red;
    font-weight: 600;
  }

  &.syntax--operator {
    color: @syntax-color-punctuation;
  }

  &.syntax--other.syntax--special-method {
    color: @syntax-color-builtin;
  }

  &.syntax--other.syntax--unit {
    // based on '@syntax-color-constant' for number
    // color: @light-blue-200;
    color: @syntax-color-numeric;
    font-weight: 400;
  }
}

.syntax--storage {
  // color: @purple;
  color: @syntax-color-builtin;
}

.syntax--constant {
  color: @syntax-color-constant;

  &.syntax--character.syntax--escape {
    color: @syntax-color-warning;
    // color: @pink-400;
    font-weight: 600;
  }

  &.syntax--numeric {
    color: @syntax-color-numeric;
    font-weight: 600;
  }

  &.syntax--other.syntax--color {
    // color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @syntax-color-symbol;
    > .syntax--punctuation {
      color: inherit;
    }
  }
}

.syntax--variable {
  color: @syntax-color-variable;
  &.syntax--punctuation.syntax--separator {
    color: @syntax-color-punctuation;
  }
  &.syntax--readwrite.syntax--js, &.syntax--other.syntax--object, &.syntax--property {
    color: @syntax-text-color;
  }
  &.syntax--language.syntax--this, &.syntax--anonymous {
    font-weight: 600;
  }

  &.syntax--interpolation {
    // color: darken(@red, 10%);
  }

  &.syntax--parameter.syntax--function {
    // color: @syntax-text-color;
  }

  &.syntax--constant {
    color: @syntax-color-constant;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @syntax-color-warning;
  color: @syntax-background-color;
  font-weight: 500;
}

.syntax--string {
  color: @syntax-color-string;
  font-style: italic;
  // background: fade(@teal-50, 50%);
  // background: @teal-50;

  &.syntax--punctuation {
    background: transparent;
    font-style: normal;
  }

  &.syntax--regexp {
    color: @syntax-color-regexp;
    // background: fade(@indigo-50, 50%);

    > .syntax--punctuation {
      color: @syntax-color-punctuation;
    }
    .syntax--source.syntax--ruby.syntax--embedded {
      // color: @orange;
      // color: @purple-400;
    }
  }

  .syntax--embedded .syntax--source {
    color: @syntax-text-color;
    font-style: normal;
  }

  &.syntax--other.syntax--link {
    // color: @red;
  }
}

.syntax--punctuation {
  &.syntax--separator {
    // color: @syntax-text-color;
    // color: @purple-200;
    color: @syntax-color-punctuation;
  }

  &.syntax--definition {
    &.syntax--comment {
      // color: @syntax-color-comment;
    }

    &.syntax--tag {
      // color: @purple-A200;
    }

    // &.string,
    // &.variable,
    // &.parameters,
    // &.array {
      // color: @syntax-text-color;
    // }

    &.syntax--heading,
    &.syntax--identity {
      // color: @blue;
    }

    &.syntax--bold {
      // color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      // color: @purple;
      font-style: italic;
    }
  }

  // String interpolation
  &.syntax--section.syntax--embedded {
    color: @syntax-color-punctuation;
    font-weight: 600;

    // TODO Figure out how to handle syntax inside interpolation
  }

}

.syntax--support {
  &.syntax--type { color: @syntax-color-punctuation; }
  &.syntax--class {
    // color: @light-orange;
    color: @syntax-color-constant;
    // color: @deep-orange-400;
  }

  &.syntax--function  {
    // color: @cyan;
    color: @syntax-color-builtin;

    &.syntax--any-method {
      // color: @blue;
    }
  }

  // There's *very* weird classes for charlists in elixir
  // so this is for that
  &.syntax--quoted {
    // color: @orange-A700;
    font-style: italic;
    color: @syntax-color-warning;
    // background: mix(@orange-50, @orange-100);

    .syntax--string.syntax--punctuation {
      // color: @orange-A700;
      color: @syntax-color-warning;
      font-style: normal;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    // color: @blue;
    color: @syntax-color-function;
    font-weight: 600;
  }
  &.syntax--name.syntax--type {
    // color: @light-orange;
    // text-decoration: underline;
    color: @syntax-color-type;
    font-weight: 600;
  }

  &.syntax--parent-selector {
    // The "&" in LESS stylesheets
    color: @syntax-color-variable;
    font-weight: 600;
  }

  &.syntax--other.syntax--inherited-class {
    // color: @green;
    color: @syntax-color-constant;
    font-weight: 400;
  }
  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    // color: @light-orange;
  }

  &.syntax--name.syntax--section {
    // color: @blue;
  }

  &.syntax--name.syntax--tag {
    // color: @red;
    // text-decoration: underline;
    color: @syntax-color-builtin;

    &.syntax--class {
      color: @syntax-color-constant;
    }

    &.syntax--id {
      color: @syntax-color-keyword;
    }
  }

  // TODO This duplication makes me sad
  &.syntax--class {
    color: @syntax-color-constant;
  }

  &.syntax--id {
    color: @syntax-color-keyword;
  }

  &.syntax--other.syntax--attribute-name {
    // color: @orange;
    &.syntax--haml {
      color: @syntax-color-symbol;
    }

    &.syntax--id {
      // color: @blue;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    // color: @light-orange;
  }

  &.syntax--link {
    // color: @orange;
  }

  &.syntax--require {
    // color: @blue;
  }

  &.syntax--selector {
    // color: @purple;
  }

  &.syntax--separator {
    // background-color: @gray;
    // color: @syntax-text-color;
  }

  &.syntax--attributes.syntax--haml .syntax--string.syntax--unquoted {
    color: @syntax-text-color;
    background: none;
    font-style: normal;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @syntax-color-builtin;
    font-weight: 600;
  }

  &.syntax--italic {
    color: @syntax-color-variable;
    font-style: italic;
  }

  &.syntax--heading {
    color: @syntax-color-constant;
    font-weight: 600;
    font-style: italic;

    // &.heading-1 {
    //   border-bottom: 1px solid;
    // }
    //
    // &.heading-2 {
    //   color: @syntax-color-constant;
    // }

    .syntax--punctuation.syntax--definition.syntax--heading,
    .syntax--marker.syntax--heading, .syntax--space.syntax--heading {
      color: @syntax-color-comment;
      font-weight: 300;
      // text-decoration: underline;
      // -webkit-text-decoration-color: @syntax-background-color;
      border-bottom: 1px solid @syntax-background-color;
    }
  }

  &.syntax--list {
    // color: @red;
  }

  &.syntax--quote {
    // color: @orange;
  }

  &.syntax--raw {
    // color: @green;
    color: @syntax-color-regexp;
    // background: @indigo-50;
  }

  &.syntax--code .syntax--support {
    // color: @indigo-200;
    font-style: italic;
  }

  &.syntax--changed {
    color: @syntax-color-renamed;
  }

  &.syntax--deleted {
    color: @syntax-color-removed;
  }

  &.syntax--inserted {
    color: @syntax-color-added;
  }
}

.syntax--source.syntax--gfm, .syntax--text.syntax--md {
  .syntax--punctuation.syntax--md {
    color: @syntax-color-comment;
    font-style: normal;
    font-weight: normal;
  }

  .syntax--list > .syntax--punctuation {
    color: @syntax-color-keyword;
  }

  .syntax--quote.syntax--md {
    font-style: italic;
    color: @syntax-color-punctuation;
  }

  .syntax--fenced {
    color: @syntax-color-regexp;
    .syntax--embedded.syntax--source {
      color: @syntax-text-color;
    }
    .syntax--language {
      color: @syntax-color-comment;
      font-style: italic;
    }
  }
  // .code .embedded .punctuation {
  //   color: @syntax-color-punctuation;
  // }

  // Atom is fairly agressive in detecting links (finding them in strings in
  // arbitrary language grammars) so scope this to only markdown
  .syntax--link.syntax--underline{
    color: @syntax-color-numeric;
    text-decoration: underline;
  }
}
